// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Db.Data;

#nullable disable

namespace RestaurantReservation.Db.Migrations
{
    [DbContext(typeof(RestaurantReservationDbContext))]
    [Migration("20240112150929_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Customers", b =>
                {
                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            customer_id = 1111,
                            email = "john.doe@example.com",
                            first_name = "John",
                            last_name = "Doe",
                            phone_number = "+1234567890"
                        },
                        new
                        {
                            customer_id = 2222,
                            email = "jane.smith@example.com",
                            first_name = "Jane",
                            last_name = "Smith",
                            phone_number = "+1987654321"
                        },
                        new
                        {
                            customer_id = 3333,
                            email = "alice.johnson@example.com",
                            first_name = "Alice",
                            last_name = "Johnson",
                            phone_number = "+1122334455"
                        },
                        new
                        {
                            customer_id = 4444,
                            email = "bob.williams@example.com",
                            first_name = "Bob",
                            last_name = "Williams",
                            phone_number = "+1555666777"
                        },
                        new
                        {
                            customer_id = 5555,
                            email = "eva.anderson@example.com",
                            first_name = "Eva",
                            last_name = "Anderson",
                            phone_number = "+1444333222"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Employees", b =>
                {
                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("restaurant_id")
                        .HasColumnType("int");

                    b.HasKey("employee_id");

                    b.HasIndex("restaurant_id");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            employee_id = 4321,
                            first_name = "John",
                            last_name = "Doe",
                            position = "Server",
                            restaurant_id = 111
                        },
                        new
                        {
                            employee_id = 5432,
                            first_name = "Jane",
                            last_name = "Smith",
                            position = "Chef",
                            restaurant_id = 222
                        },
                        new
                        {
                            employee_id = 6543,
                            first_name = "Alice",
                            last_name = "Johnson",
                            position = "Waiter",
                            restaurant_id = 333
                        },
                        new
                        {
                            employee_id = 7654,
                            first_name = "Bob",
                            last_name = "Williams",
                            position = "Bartender",
                            restaurant_id = 444
                        },
                        new
                        {
                            employee_id = 8765,
                            first_name = "Eva",
                            last_name = "Anderson",
                            position = "Manager",
                            restaurant_id = 555
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.MenuItems", b =>
                {
                    b.Property<int>("item_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("restaurant_id")
                        .HasColumnType("int");

                    b.HasKey("item_id");

                    b.HasIndex("restaurant_id");

                    b.ToTable("MenuItems", (string)null);

                    b.HasData(
                        new
                        {
                            item_id = 11,
                            description = "Juicy beef burger with cheese and veggies",
                            name = "Burger",
                            price = 10,
                            restaurant_id = 111
                        },
                        new
                        {
                            item_id = 22,
                            description = "Spaghetti with tomato sauce and meatballs",
                            name = "Pasta",
                            price = 15,
                            restaurant_id = 222
                        },
                        new
                        {
                            item_id = 33,
                            description = "Fresh garden salad with mixed greens",
                            name = "Salad",
                            price = 8,
                            restaurant_id = 333
                        },
                        new
                        {
                            item_id = 44,
                            description = "Margherita pizza with tomato, mozzarella, and basil",
                            name = "Pizza",
                            price = 12,
                            restaurant_id = 444
                        },
                        new
                        {
                            item_id = 55,
                            description = "Assorted sushi rolls with wasabi and soy sauce",
                            name = "Sushi",
                            price = 18,
                            restaurant_id = 555
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.OrderItems", b =>
                {
                    b.Property<int>("order_item_id")
                        .HasColumnType("int");

                    b.Property<int>("item_id")
                        .HasColumnType("int");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("order_item_id");

                    b.HasIndex("item_id");

                    b.HasIndex("order_id");

                    b.ToTable("OrderItems", (string)null);

                    b.HasData(
                        new
                        {
                            order_item_id = 101,
                            item_id = 11,
                            order_id = 1112,
                            quantity = 2
                        },
                        new
                        {
                            order_item_id = 202,
                            item_id = 22,
                            order_id = 2223,
                            quantity = 1
                        },
                        new
                        {
                            order_item_id = 303,
                            item_id = 33,
                            order_id = 3334,
                            quantity = 3
                        },
                        new
                        {
                            order_item_id = 404,
                            item_id = 44,
                            order_id = 4445,
                            quantity = 2
                        },
                        new
                        {
                            order_item_id = 505,
                            item_id = 55,
                            order_id = 5556,
                            quantity = 1
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Orders", b =>
                {
                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("employee_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("reservation_id")
                        .HasColumnType("int");

                    b.Property<int>("total_amount")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("reservation_id");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            order_id = 1112,
                            employee_id = 4321,
                            order_date = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            reservation_id = 1234,
                            total_amount = 85
                        },
                        new
                        {
                            order_id = 2223,
                            employee_id = 5432,
                            order_date = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            reservation_id = 2345,
                            total_amount = 120
                        },
                        new
                        {
                            order_id = 3334,
                            employee_id = 6543,
                            order_date = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            reservation_id = 3456,
                            total_amount = 45
                        },
                        new
                        {
                            order_id = 4445,
                            employee_id = 7654,
                            order_date = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            reservation_id = 4567,
                            total_amount = 100
                        },
                        new
                        {
                            order_id = 5556,
                            employee_id = 8765,
                            order_date = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            reservation_id = 5678,
                            total_amount = 150
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Reservations", b =>
                {
                    b.Property<int>("reservation_id")
                        .HasColumnType("int");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int>("party_size")
                        .HasColumnType("int");

                    b.Property<DateTime>("reservation")
                        .HasColumnType("datetime2");

                    b.Property<int>("restaurant_id")
                        .HasColumnType("int");

                    b.Property<int>("table_id")
                        .HasColumnType("int");

                    b.HasKey("reservation_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("restaurant_id");

                    b.HasIndex("table_id");

                    b.ToTable("Reservations", (string)null);

                    b.HasData(
                        new
                        {
                            reservation_id = 1234,
                            customer_id = 1111,
                            party_size = 4,
                            reservation = new DateTime(2024, 1, 13, 17, 9, 28, 929, DateTimeKind.Local).AddTicks(6675),
                            restaurant_id = 111,
                            table_id = 1122
                        },
                        new
                        {
                            reservation_id = 2345,
                            customer_id = 2222,
                            party_size = 2,
                            reservation = new DateTime(2024, 1, 14, 17, 9, 28, 929, DateTimeKind.Local).AddTicks(6741),
                            restaurant_id = 222,
                            table_id = 2233
                        },
                        new
                        {
                            reservation_id = 3456,
                            customer_id = 3333,
                            party_size = 6,
                            reservation = new DateTime(2024, 1, 15, 17, 9, 28, 929, DateTimeKind.Local).AddTicks(6745),
                            restaurant_id = 333,
                            table_id = 3344
                        },
                        new
                        {
                            reservation_id = 4567,
                            customer_id = 4444,
                            party_size = 3,
                            reservation = new DateTime(2024, 1, 16, 17, 9, 28, 929, DateTimeKind.Local).AddTicks(6749),
                            restaurant_id = 444,
                            table_id = 4455
                        },
                        new
                        {
                            reservation_id = 5678,
                            customer_id = 5555,
                            party_size = 5,
                            reservation = new DateTime(2024, 1, 17, 17, 9, 28, 929, DateTimeKind.Local).AddTicks(6753),
                            restaurant_id = 555,
                            table_id = 5566
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Restaurants", b =>
                {
                    b.Property<int>("restaurant_id")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("opening_hours")
                        .HasColumnType("int");

                    b.Property<int>("phone_number")
                        .HasColumnType("int");

                    b.HasKey("restaurant_id");

                    b.ToTable("Restaurants", (string)null);

                    b.HasData(
                        new
                        {
                            restaurant_id = 111,
                            address = "123 Main St",
                            name = "Doe's Diner",
                            opening_hours = 8,
                            phone_number = 5551657
                        },
                        new
                        {
                            restaurant_id = 222,
                            address = "456 Oak Ave",
                            name = "Smith's Bistro",
                            opening_hours = 9,
                            phone_number = 555543
                        },
                        new
                        {
                            restaurant_id = 333,
                            address = "789 Elm Blvd",
                            name = "Johnson's Grill",
                            opening_hours = 7,
                            phone_number = 555490
                        },
                        new
                        {
                            restaurant_id = 444,
                            address = "567 Pine Dr",
                            name = "Williams' Pizzeria",
                            opening_hours = 10,
                            phone_number = 5544478
                        },
                        new
                        {
                            restaurant_id = 555,
                            address = "890 Cedar Ln",
                            name = "Anderson's Sushi House",
                            opening_hours = 11,
                            phone_number = 555432
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Tables", b =>
                {
                    b.Property<int>("table_id")
                        .HasColumnType("int");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<int>("restaurant_id")
                        .HasColumnType("int");

                    b.HasKey("table_id");

                    b.HasIndex("restaurant_id");

                    b.ToTable("Tables", (string)null);

                    b.HasData(
                        new
                        {
                            table_id = 1122,
                            capacity = 4,
                            restaurant_id = 111
                        },
                        new
                        {
                            table_id = 2233,
                            capacity = 6,
                            restaurant_id = 222
                        },
                        new
                        {
                            table_id = 3344,
                            capacity = 2,
                            restaurant_id = 333
                        },
                        new
                        {
                            table_id = 4455,
                            capacity = 8,
                            restaurant_id = 444
                        },
                        new
                        {
                            table_id = 5566,
                            capacity = 5,
                            restaurant_id = 555
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Employees", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entitys.Restaurants", "Restaurant")
                        .WithMany("Employees")
                        .HasForeignKey("restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.MenuItems", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entitys.Restaurants", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.OrderItems", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entitys.MenuItems", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("item_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entitys.Orders", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Orders", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entitys.Employees", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entitys.Reservations", "Reservation")
                        .WithMany("Orders")
                        .HasForeignKey("reservation_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Reservations", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entitys.Customers", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entitys.Restaurants", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("restaurant_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Entitys.Tables", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("table_id")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Tables", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Entitys.Restaurants", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Customers", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Employees", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.MenuItems", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Orders", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Reservations", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Restaurants", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("MenuItems");

                    b.Navigation("Reservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Entitys.Tables", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
